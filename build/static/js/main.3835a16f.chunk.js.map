{"version":3,"sources":["services/people.js","App.js","index.js"],"names":["axios","defaults","baseURL","peopleService","getAll","get","then","response","data","add","newObject","post","remove","id","delete","update","put","Notification","notification","message","className","type","Filter","searchQuery","onSearchQueryChange","value","onChange","PersonForm","props","onSubmit","onFormSubmit","newName","newNameInputChange","newNumber","newNumberInputChange","People","people","onDeletePerson","map","person","name","number","onClick","App","useState","currentNotification","setCurrentNotification","setSearchQuery","setNewName","setNewNumber","persons","setPersons","useEffect","personsService","displayNotification","setTimeout","clearFields","filteredPersons","filter","p","toLowerCase","includes","event","target","preventDefault","find","window","confirm","updatedPerson","newPerson","console","log","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3835a16f.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://127.0.0.1:3001/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(\"/\");\n  return request.then((response) => response.data);\n};\n\nconst add = (newObject) => {\n  const request = axios.post(\"/\", newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`/${id}`);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst peopleService = { getAll, add, remove, update };\nexport default peopleService;\n","import React, { useEffect, useState } from \"react\";\nimport personsService from \"./services/people\";\nimport \"./App.css\";\n\nconst Notification = ({ notification }) => {\n  if (!notification.message) return null;\n  return (\n    <div className={`notification notification__${notification.type}`}>\n      {notification.message}\n    </div>\n  );\n};\n\nconst Filter = ({ searchQuery, onSearchQueryChange }) => {\n  return (\n    <div>\n      Search for: <input value={searchQuery} onChange={onSearchQueryChange} />\n    </div>\n  );\n};\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onFormSubmit}>\n      <div>\n        name:\n        <input value={props.newName} onChange={props.newNameInputChange} />\n      </div>\n      <div>\n        number:\n        <input value={props.newNumber} onChange={props.newNumberInputChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst People = ({ people, onDeletePerson }) => {\n  return people.map((person) => (\n    <div key={person.id}>\n      {person.name} {person.number}{\" \"}\n      <button onClick={() => onDeletePerson(person)}>delete</button>\n    </div>\n  ));\n};\n\nconst App = () => {\n  const [currentNotification, setCurrentNotification] = useState({});\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [persons, setPersons] = useState([]);\n  const hook = () =>\n    personsService.getAll().then((people) => setPersons(people));\n  useEffect(hook, []);\n\n  const newNameInputChange = (event) => setNewName(event.target.value);\n  const newNumberInputChange = (event) => setNewNumber(event.target.value);\n  const searchQueryChange = (event) => setSearchQuery(event.target.value);\n\n  const displayNotification = (notification) => {\n    setCurrentNotification(notification);\n    setTimeout(() => {\n      setCurrentNotification({});\n    }, 3000);\n  };\n\n  const clearFields = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n\n    const person = persons.find((p) => p.name === newName);\n    if (person) {\n      if (\n        window.confirm(\n          `${newName} is already added to the phonebook, replace the old phone number with a new one?`\n        )\n      ) {\n        personsService\n          .update(person.id, { ...person, number: newNumber })\n          .then((updatedPerson) => {\n            setPersons(\n              persons.map((p) => (p.id !== person.id ? p : updatedPerson))\n            );\n            clearFields();\n            displayNotification({\n              type: \"success\",\n              message: `Updated ${person.name}`,\n            });\n          });\n      }\n    } else {\n      // add to db\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      };\n      personsService.add(newPerson).then((p) => {\n        console.log(p);\n        setPersons([...persons, p]);\n        clearFields();\n        displayNotification({ type: \"success\", message: `Added ${p.name}` });\n      });\n    }\n  };\n\n  const onDeletePerson = (person) => {\n    if (!window.confirm(`Are you sure you want to delete ${person.name}?`))\n      return;\n    personsService.remove(person.id).catch(() => {\n      displayNotification({\n        type: \"error\",\n        message: `${person.name} was already deleted`,\n      });\n    });\n    setPersons(persons.filter((p) => p.id !== person.id));\n    displayNotification({ type: \"error\", message: `Deleted ${person.name}` });\n  };\n\n  const filteredPersons = persons.filter((p) =>\n    p.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={currentNotification} />\n      <Filter\n        searchQuery={searchQuery}\n        onSearchQueryChange={searchQueryChange}\n      />\n      <h3>Insert new:</h3>\n      <PersonForm\n        onFormSubmit={onFormSubmit}\n        newName={newName}\n        newNumber={newNumber}\n        newNameInputChange={newNameInputChange}\n        newNumberInputChange={newNumberInputChange}\n      />\n      <h2>Numbers</h2>\n      <People people={filteredPersons} onDeletePerson={onDeletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}