{"version":3,"sources":["services/personsService.js","App.js","index.js"],"names":["axios","defaults","baseURL","personsService","getAll","get","then","response","data","add","newObject","post","remove","id","delete","update","put","Notification","notification","message","className","type","Filter","searchQuery","onSearchQueryChange","value","onChange","PersonForm","props","onSubmit","onFormSubmit","newName","newNameInputChange","newNumber","newNumberInputChange","People","people","onDeletePerson","map","person","name","number","onClick","App","useState","currentNotification","setCurrentNotification","setSearchQuery","setNewName","setNewNumber","persons","setPersons","useEffect","displayNotification","setTimeout","clearFields","filteredPersons","filter","p","toLowerCase","includes","event","target","preventDefault","find","window","confirm","updatedPerson","newPerson","console","log","catch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb657694.chunk.js","sourcesContent":["import axios from \"axios\"\n\naxios.defaults.baseURL = \"/api/persons\"\n\nconst getAll = () => {\n  const request = axios.get(\"/\")\n  return request.then(response => response.data)\n}\n\nconst add = (newObject) => {\n  const request = axios.post(\"/\", newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`/${id}`)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst personsService = { getAll, add, remove, update }\nexport default personsService\n","import React, { useEffect, useState } from 'react'\nimport personsService from \"./services/personsService\"\nimport \"./App.css\"\n\nconst Notification = ({ notification }) => {\n  if (!notification.message) return null\n  return <div className={`notification notification__${notification.type}`}>{notification.message}</div>\n}\n\nconst Filter = ({ searchQuery, onSearchQueryChange }) => {\n  return <div>Search for: <input value={searchQuery} onChange={onSearchQueryChange} /></div>\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onFormSubmit}>\n      <div>name: <input value={props.newName} onChange={props.newNameInputChange} /></div>\n      <div>number: <input value={props.newNumber} onChange={props.newNumberInputChange} /></div>\n      <div><button type=\"submit\">add</button></div>\n    </form>\n  )\n}\n\nconst People = ({ people, onDeletePerson }) => {\n  return people.map(person =>\n    <div key={person.id}>\n      {person.name} {person.number} <button onClick={() => onDeletePerson(person)}>delete</button>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [currentNotification, setCurrentNotification] = useState({})\n  const [searchQuery, setSearchQuery] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [persons, setPersons] = useState([])\n  const hook = () => personsService.getAll().then(people => setPersons(people))\n  useEffect(hook, [])\n\n  const newNameInputChange = (event) => setNewName(event.target.value)\n  const newNumberInputChange = (event) => setNewNumber(event.target.value)\n  const searchQueryChange = (event) => setSearchQuery(event.target.value)\n\n  const displayNotification = (notification) => {\n    setCurrentNotification(notification)\n    setTimeout(() => {\n      setCurrentNotification({})\n    }, 3000);\n  };\n\n  const clearFields = () => {\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n\n  const onFormSubmit = (event) => {\n    event.preventDefault()\n\n    const person = persons.find(p => p.name === newName)\n    if (person) {\n      if (window.confirm(`${newName} is already added to the phonebook, replace the old phone number with a new one?`)) {\n        personsService.update(person.id, { ...person, number: newNumber })\n          .then(updatedPerson => {\n            setPersons(persons.map(p => p.id !== person.id ? p : updatedPerson))\n            clearFields()\n            displayNotification({ type: \"success\", message: `Updated ${person.name}` })\n          })\n      }\n    } else {\n      // add to db\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n      personsService.add(newPerson)\n        .then(p => {\n          console.log(p)\n          setPersons([...persons, p])\n          clearFields()\n          displayNotification({ type: \"success\", message: `Added ${p.name}` })\n        })\n    }\n  }\n\n  const onDeletePerson = (person) => {\n    if (!window.confirm(`Are you sure you want to delete ${person.name}?`)) return\n    personsService.remove(person.id)\n      .catch(() => {\n        displayNotification({ type: \"error\", message: `${person.name} was already deleted` })\n      })\n    setPersons(persons.filter(p => p.id !== person.id))\n    displayNotification({ type: \"error\", message: `Deleted ${person.name}` })\n  }\n\n  const filteredPersons = persons.filter(p => p.name.toLowerCase().includes(searchQuery.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={currentNotification} />\n      <Filter searchQuery={searchQuery} onSearchQueryChange={searchQueryChange} />\n      <h3>Insert new:</h3>\n      <PersonForm\n        onFormSubmit={onFormSubmit}\n        newName={newName}\n        newNumber={newNumber}\n        newNameInputChange={newNameInputChange}\n        newNumberInputChange={newNumberInputChange}\n      />\n      <h2>Numbers</h2>\n      <People people={filteredPersons} onDeletePerson={onDeletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}